# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2020-01-05 16:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments_contens', models.CharField(max_length=200, verbose_name='评论')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=30, verbose_name='课程名称')),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_name', models.CharField(max_length=20, verbose_name='年级名称')),
                ('fk_course_id', models.ManyToManyField(to='data.Course')),
            ],
            options={
                'db_table': 'grade',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'image',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_account', models.CharField(default='', max_length=20, unique=True, verbose_name='账号')),
                ('teacher_name', models.CharField(max_length=20, verbose_name='姓名')),
                ('teacher_sex', models.CharField(max_length=10, verbose_name='性别')),
                ('teacher_age1', models.CharField(default='', max_length=11, verbose_name='出生日期')),
                ('teacher_cardID', models.CharField(default='', max_length=32, verbose_name='身份证号')),
                ('teacher_password', models.CharField(default='', max_length=32, verbose_name='密码')),
                ('teacher_address', models.CharField(max_length=100, verbose_name='地址')),
                ('teacher_education', models.CharField(max_length=10, verbose_name='学历')),
                ('teacher_teach_age', models.IntegerField(null=True, verbose_name='教龄')),
                ('teacher_phone', models.CharField(default='', max_length=11, verbose_name='电话')),
                ('teacher_email', models.EmailField(default='', max_length=30, verbose_name='邮箱')),
                ('teacher_achievement', models.CharField(max_length=600, verbose_name='成果')),
                ('teacher_isActive', models.BooleanField(default='False', verbose_name='是否激活')),
                ('teacher_createtime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('teacher_updatetime', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('fk_teacher_course_id', models.ManyToManyField(to='data.Course')),
                ('fk_teacher_grade_id', models.ManyToManyField(to='data.Grade')),
            ],
            options={
                'db_table': 'teacher',
            },
        ),
        migrations.CreateModel(
            name='TeacherDemand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_demand_content', models.CharField(max_length=200, verbose_name='需求内容')),
                ('fk_teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Teacher')),
            ],
            options={
                'db_table': 'teacherdemand',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_account', models.CharField(default='', max_length=20, unique=True, verbose_name='账号')),
                ('user_name', models.CharField(max_length=20, verbose_name='姓名')),
                ('user_sex', models.CharField(max_length=10, verbose_name='性别')),
                ('user_password', models.CharField(default='', max_length=32, verbose_name='密码')),
                ('user_address', models.CharField(max_length=100, verbose_name='地址')),
                ('user_phone', models.CharField(default='', max_length=11, verbose_name='电话')),
                ('user_email', models.EmailField(default='', max_length=30, verbose_name='邮箱')),
                ('user_isActive', models.BooleanField(default='True', verbose_name='是否激活')),
                ('user_createtime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user_updatetime', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('fk_teacher_user_id', models.ManyToManyField(to='data.Teacher')),
                ('fk_user_course_id', models.ManyToManyField(to='data.Course')),
                ('fk_user_grade_id', models.ManyToManyField(to='data.Grade')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserDemand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_demand_content', models.CharField(max_length=200, verbose_name='需求内容')),
                ('fk_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.User')),
            ],
            options={
                'db_table': 'userdemand',
            },
        ),
        migrations.CreateModel(
            name='Zan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zan_count', models.IntegerField(default=0, verbose_name='点赞数')),
                ('fk_teacher_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Teacher')),
                ('fk_user_id', models.ManyToManyField(to='data.User')),
            ],
            options={
                'db_table': 'zan',
            },
        ),
        migrations.AddField(
            model_name='image',
            name='fk_teacher_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Teacher'),
        ),
        migrations.AddField(
            model_name='image',
            name='fk_user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.User'),
        ),
        migrations.AddField(
            model_name='comments',
            name='fk_teacher_id',
            field=models.ManyToManyField(to='data.Teacher'),
        ),
        migrations.AddField(
            model_name='comments',
            name='fk_teacherdemand_id',
            field=models.ManyToManyField(to='data.TeacherDemand'),
        ),
        migrations.AddField(
            model_name='comments',
            name='fk_user_id',
            field=models.ManyToManyField(to='data.User'),
        ),
        migrations.AddField(
            model_name='comments',
            name='fk_userdemand_id',
            field=models.ManyToManyField(to='data.UserDemand'),
        ),
    ]
